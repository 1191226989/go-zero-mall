// Code generated by goctl. DO NOT EDIT!
// Source: product.proto

package product

import (
	"context"

	"mall/service/product/rpc/proto3"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateRequest     = proto3.CreateRequest
	CreateResponse    = proto3.CreateResponse
	DecrStockRequest  = proto3.DecrStockRequest
	DecrStockResponse = proto3.DecrStockResponse
	DetailRequest     = proto3.DetailRequest
	DetailResponse    = proto3.DetailResponse
	RemoveRequest     = proto3.RemoveRequest
	RemoveResponse    = proto3.RemoveResponse
	UpdateRequest     = proto3.UpdateRequest
	UpdateResponse    = proto3.UpdateResponse

	Product interface {
		Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
		Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
		Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
		Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error)
		DecrStock(ctx context.Context, in *DecrStockRequest, opts ...grpc.CallOption) (*DecrStockResponse, error)
		DecrStockRevert(ctx context.Context, in *DecrStockRequest, opts ...grpc.CallOption) (*DecrStockResponse, error)
	}

	defaultProduct struct {
		cli zrpc.Client
	}
)

func NewProduct(cli zrpc.Client) Product {
	return &defaultProduct{
		cli: cli,
	}
}

func (m *defaultProduct) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	client := proto3.NewProductClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultProduct) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	client := proto3.NewProductClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultProduct) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	client := proto3.NewProductClient(m.cli.Conn())
	return client.Remove(ctx, in, opts...)
}

func (m *defaultProduct) Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error) {
	client := proto3.NewProductClient(m.cli.Conn())
	return client.Detail(ctx, in, opts...)
}

func (m *defaultProduct) DecrStock(ctx context.Context, in *DecrStockRequest, opts ...grpc.CallOption) (*DecrStockResponse, error) {
	client := proto3.NewProductClient(m.cli.Conn())
	return client.DecrStock(ctx, in, opts...)
}

func (m *defaultProduct) DecrStockRevert(ctx context.Context, in *DecrStockRequest, opts ...grpc.CallOption) (*DecrStockResponse, error) {
	client := proto3.NewProductClient(m.cli.Conn())
	return client.DecrStockRevert(ctx, in, opts...)
}
